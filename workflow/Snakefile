#---- snakebids boilerplate

import snakebids
from snakebids import bids

configfile: 'config/snakebids.yml'

#writes inputs_config.yml and updates config dict
snakebids.generate_inputs_config(config)

#this adds constraints to the bids naming
wildcard_constraints:  **snakebids.get_wildcard_constraints(config)

#----
wildcard_constraints:
    desc='[a-zA-Z0-9]+',
    template='[a-zA-Z0-9]+',
    space='[a-zA-Z0-9]+',



#this function gets the list of final outputs (L+R combined segs)
def get_final_segs():
    subfields = []
    for modality in config['modality']:
        if modality[:3] == 'seg': #if modality is segT1w, then seg is used as the pybids index 
            mod_index = 'seg'
        else:
            mod_index = modality
        subfields = subfields + \
            expand(
                bids(root='results',
                    datatype='anat',
                    suffix='dseg.nii.gz',
                    desc='subfields',
                    space='T1w',
                    modality=modality,
                    template=config['template'],
                    **config['subj_wildcards']),
                subject=config['input_lists'][mod_index]['subject'],
                session=config['sessions']
            )

        return subfields
        
    
                



rule all:
    input: get_final_segs()


include: 'rules/common.smk'
include: 'rules/preproc_seg.smk'
include: 'rules/preproc_t1.smk'
include: 'rules/preproc_t2.smk'
include: 'rules/preproc_dwi.smk'
include: 'rules/autotop.smk'

